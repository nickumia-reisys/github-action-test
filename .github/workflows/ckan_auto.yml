---
name: 4 - Automated CKAN Jobs

on:   # yamllint disable-line rule:truthy
  workflow_dispatch:
  schedule:
    - cron: '30 7 * * *'       # Tracking Update -- every day at 7:30am UTC
    - cron: '0 3 * * *'        # S3 Sitemap Update -- every day at 3am UTC
    - cron: '0/5 * * * *'
    - cron: '0 4 * * *'        # DB-Solr-Sync -- every day at 4am UTC
    - cron: '0 5 * * *'        # Check Stuck Jobs -- every day at 5am UTC

env:
  TEST: '0/5 * * * *'

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Generate Matrix
        id: generate-matrix
        run: |
          MATRIX=$(cat << MAT
          {
            "schedule": ["30 7 * * *", "0 3 * * *", "${{env.TEST}}", "0 4 * * *", "0 5 * * *"],
            "environ": ["development", "staging", "prod"],
            "include": [ {"app": "catalog-admin"},
                         {"schedule": "${{env.TEST}}", "command": "ckan harvester run"}, # test
                         {"schedule": "30 7 * * *", "command": "ckan geodatagov tracking-update"},
                         {"schedule": "0 3 * * *", "command": "ckan geodatagov sitemap-to-s3"},
                         {"schedule": "0 3 * * *", "app": "catalog-gather"},
                         {"schedule": "0 4 * * *", "command": "ckan geodatagov db-solr-sync"},
                         {"schedule": "0 5 * * *", "command": "ckan geodatagov check-stuck-jobs"},
                         {"environ": "development", "ram": "1G"},
                         {"environ": "staging", "ram": "1G"},
                         {"environ": "prod", "ram": "1G"}
                       ],
            "exclude": [ {"schedule": "0 3 * * *", "environ": "development"},
                         {"schedule": "0 3 * * *", "environ": "staging"},
                         {"schedule": "0 5 * * *", "environ": "staging"}
                       ],
          }
          MAT
          )
          echo "matrix<<EOF" >> $GITHUB_OUTPUT
          echo "$MATRIX" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo $MATRIX

  ckan-auto-command:
    needs:
      - setup-matrix
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:  ${{ fromJSON(needs.setup-matrix.outputs.matrix) }}
    name: ${{ matrix.command }} - ${{matrix.environ}}
    runs-on: ubuntu-latest
    environment: ${{matrix.environ}}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Set Unique Command Name
        # yamllint disable rule:line-length
        run: |
          INSTANCE_NAME="$(echo ${{ matrix.command }}-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT})"
          echo "INSTANCE_NAME=${INSTANCE_NAME}" | tee -a $GITHUB_ENV
          # yamllint enable rule:line-length
      - name: ${{ matrix.command }}
        if: ${{ github.event.schedule == matrix.schedule }}
        run: |
          echo ${{ matrix.command }}
          echo ${{ matrix.app }}
