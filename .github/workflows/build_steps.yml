---
name: Workflow Dispatch Tests

on:   # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      scenario:
        description: 'Test to run:'
        required: true
        type: choice
        options:
          - 'Github Build Output'
          - 'Github API Run Curl'
          - 'Matrix Includes'
          - 'Matrix Needs'
          - 'Substring'
          - 'Boolean Input Bash Test'
          - 'YQ test'
          - 'YQ test folder'
      run:
        required: false
        type: boolean

jobs:
  gh-output:
    name: check last step
    if: ${{ inputs.scenario == 'Github Build Output' }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Set Unique Command Name
        run: |
          INSTANCE_NAME="$(echo test-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT})"
          echo "INSTANCE_NAME=${INSTANCE_NAME}" | tee -a $GITHUB_ENV
      - name: Check output
        run: |
          echo ${{ toJson(steps) }}
          echo ${{ toJson(steps.build.outputs) }}

  gh-api-curl:
    name: github curl api
    if: ${{ inputs.scenario == 'Github API Run Curl' }}
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Cancel Older Versions
        run: |
          ids=$(curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/${{ github.repository }}/actions/workflows/issue_creation.yml/runs" | jq '.workflow_runs[] | select(.status=="in_progress") | .id');
          readarray -t rids < <(curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/${{ github.repository }}/actions/workflows/issue_creation.yml/runs" | jq '.workflow_runs[] | select(.status=="completed") | .id');
          for id in "${rids[@]}"; do
            if [[ "$id" != "${{ github.run_id }}" ]]; then
              curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/gsa/${{ github.repository }}/actions/runs/$id/cancel";
            fi
          done;

  matrix-includes:
    name: Step 0
    if: ${{ inputs.scenario == 'Matrix Includes' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        event: [1, 2]
        space: [a, b, c]
        include:
          - event: 1
            command: "qwer"
          - event: 2
            command: "asdf"
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: ${${{ matrix.command }}/as/cv}
        run: |
          echo ${{ matrix.event }}
          echo ${{ matrix.command }}

  matrix-needs-1:
    name: Step 0
    if: ${{ inputs.scenario == 'Matrix Needs' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        event: [1, 2]
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Do something
        run: echo ${{ matrix.event }}

  matrix-needs-2:
    name: Step A
    if: ${{ inputs.scenario == 'Matrix Needs' }}
    runs-on: ubuntu-latest
    needs: matrix-needs-1
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Do something
        run: echo A

  matrix-needs-3:
    name: Step B
    if: ${{ inputs.scenario == 'Matrix Needs' }}
    runs-on: ubuntu-latest
    needs: matrix-needs-1
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Do something
        run: echo B

  substring:
    name: substring
    if: ${{ inputs.scenario == 'Substring' }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: echo substring
        run: |
          repository=${{ github.repository }}
          repo_name=${repository#*/}

          echo "${{ github.repository }}"
          echo ${{ github.repository }}

          echo "$repo_name"
          echo $repo_name

  boolean_input:
    name: bool in
    if: ${{ inputs.scenario == 'Boolean Input Bash Test' }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: if bool
        run: |
          if [[ "${{ inputs.run }}" == "true" ]]; then
            echo "Boolean was true!"
          else
            echo "Boolean was false!!"
          fi

  test-yq:
    name: 'Test yq command'
    if: ${{ inputs.scenario == 'YQ test' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: echo
      run: |
        export VERSION=v4.2.0 BINARY=yq_linux_amd64
        sudo apt-get update && sudo apt-get install curl
        curl -sL https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz | tar xz && sudo mv ${BINARY} /usr/bin/yq
        yq --help
        yq --version

  test-npm:
    name: 'YQ Action Working Dir'
    if: ${{ inputs.scenario == 'YQ test folder' }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          path: 'test'
      - run: |
          cat <<- EOF > test/test.yaml
          image:
            tag: something
          EOF
          pwd
          ls
      - name: get image tag
        id: image_tag
        uses: mikefarah/yq@v4.35.2
        with:
          cmd: |
            ls; pwd;
            yq '.image.tag = "something cooler"' test/test.yaml
      - run: |
          ls
          pwd
          cat test/test.yaml
